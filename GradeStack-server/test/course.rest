# GradeStack API - Course Endpoints
# ===============================

# Environment Variables
@baseUrl = http://localhost:4000/api
@instructorId = 1bc9424f-50cf-43ce-b034-f3edc36f2135
@token = YOUR_JWT_TOKEN_HERE
@topicId = 713bbb5f-cae1-4390-a722-c1b79b17b0e3
@courseId = b1b9cc45-179b-43c3-bac4-aa30f5bd2760
@moduleId = 9b6b9e70-b223-461e-bc94-177a0a4c6417
@lessonId = 92403a52-e00b-4e10-a1d0-82eb83793729

# ===============================
# COURSE CRUD OPERATIONS
# ===============================

### Create a new course
# Creates a complete course with modules and lessons
# Trạng thái : Đã test chạy ok 

POST {{baseUrl}}/instructors/{{instructorId}}/courses
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "title": "Complete Programming Course - All Lesson Types",
  "description": "A comprehensive coding course featuring all lesson types: VIDEO, CODING, and FINAL_TEST",
  "price": 99.99,
  "thumbnailUrl": "https://pub-dafea69342db4ec593c6d0d001af4f41.r2.dev/course-videos/thumbnails/sample-thumbnail.jpg",
  "topicIds": ["{{topicId}}"],
  "isPublished": false,
  "modules": [
    {
      "title": "Module 1: Introduction to Programming",
      "description": "Introduction to programming fundamentals with video lessons",
      "order": 1,
      "videoUrl": "https://pub-dafea69342db4ec593c6d0d001af4f41.r2.dev/course-videos/intro.mp4",
      "thumbnailUrl": "https://pub-dafea69342db4ec593c6d0d001af4f41.r2.dev/course-videos/thumbnails/intro-thumbnail.jpg",
      "videoDuration": 180,
      "lessons": [
        {
          "title": "Welcome to Programming",
          "description": "An introduction to the course and programming concepts",
          "lessonType": "VIDEO",
          "isPreview": true,
          "order": 1,
          "videoUrl": "https://pub-dafea69342db4ec593c6d0d001af4f41.r2.dev/course-videos/welcome.mp4",
          "thumbnailUrl": "https://pub-dafea69342db4ec593c6d0d001af4f41.r2.dev/course-videos/thumbnails/welcome-thumbnail.jpg",
          "duration": 300
        },
        {
          "title": "Your First Coding Exercise",
          "description": "Practice basic coding concepts with this exercise",
          "lessonType": "CODING",
          "language": "PYTHON",
          "isPreview": false,
          "order": 2,
          "exerciseContent": "Write a function that prints 'Hello, World!' to the console.",
          "solution": "def hello_world():\n  print('Hello, World!')",
          "hint": "Remember to use the print function to output text to the console.",
          "codeSnippet": "# Your code here\ndef hello_world():\n  # Complete the function\n  pass"
        }
      ]
    },
    {
      "title": "Module 2: JavaScript Fundamentals",
      "description": "Learn the basics of JavaScript programming",
      "order": 2,
      "videoUrl": "https://pub-dafea69342db4ec593c6d0d001af4f41.r2.dev/course-videos/javascript-intro.mp4",
      "thumbnailUrl": "https://pub-dafea69342db4ec593c6d0d001af4f41.r2.dev/course-videos/thumbnails/javascript-thumbnail.jpg",
      "videoDuration": 240,
      "lessons": [
        {
          "title": "JavaScript Basics",
          "description": "Introduction to JavaScript syntax and concepts",
          "lessonType": "VIDEO",
          "isPreview": false,
          "order": 1,
          "videoUrl": "https://pub-dafea69342db4ec593c6d0d001af4f41.r2.dev/course-videos/js-basics.mp4",
          "thumbnailUrl": "https://pub-dafea69342db4ec593c6d0d001af4f41.r2.dev/course-videos/thumbnails/js-basics-thumbnail.jpg",
          "duration": 420
        },
        {
          "title": "JavaScript Functions Exercise",
          "description": "Practice creating and using JavaScript functions",
          "lessonType": "CODING",
          "language": "JAVA",
          "isPreview": false,
          "order": 2,
          "exerciseContent": "Create a function that calculates the factorial of a number.",
          "solution": "function factorial(n) {\n  if (n === 0 || n === 1) {\n    return 1;\n  }\n  return n * factorial(n - 1);\n}",
          "hint": "Remember that factorial can be calculated recursively or using a loop.",
          "codeSnippet": "// Your code here\nfunction factorial(n) {\n  // Complete the function\n}"
        }
      ]
    },
    {
      "title": "Module 3: Advanced Concepts",
      "description": "Advanced programming concepts and techniques",
      "order": 3,
      "videoUrl": "https://pub-dafea69342db4ec593c6d0d001af4f41.r2.dev/course-videos/advanced.mp4",
      "thumbnailUrl": "https://pub-dafea69342db4ec593c6d0d001af4f41.r2.dev/course-videos/thumbnails/advanced-thumbnail.jpg",
      "videoDuration": 300,
      "lessons": [
        {
          "title": "Data Structures Overview",
          "description": "Learn about common data structures in programming",
          "lessonType": "VIDEO",
          "isPreview": false,
          "order": 1,
          "videoUrl": "https://pub-dafea69342db4ec593c6d0d001af4f41.r2.dev/course-videos/data-structures.mp4",
          "thumbnailUrl": "https://pub-dafea69342db4ec593c6d0d001af4f41.r2.dev/course-videos/thumbnails/data-structures-thumbnail.jpg",
          "duration": 540
        },
        {
          "title": "Algorithm Challenge",
          "description": "Solve a complex algorithm problem",
          "lessonType": "CODING",
          "language": "JAVA",
          "isPreview": false,
          "order": 2,
          "exerciseContent": "Implement a function to find the longest substring without repeating characters.",
          "solution": "function longestSubstring(s) {\n  let maxLength = 0;\n  let start = 0;\n  const charMap = {};\n  \n  for (let i = 0; i < s.length; i++) {\n    const char = s[i];\n    if (charMap[char] >= start) {\n      start = charMap[char] + 1;\n    }\n    charMap[char] = i;\n    maxLength = Math.max(maxLength, i - start + 1);\n  }\n  \n  return maxLength;\n}",
          "hint": "Consider using a sliding window approach with a hash map to track character positions.",
          "codeSnippet": "// Your code here\nfunction longestSubstring(s) {\n  // Complete the function\n}"
        },
        {
          "title": "Final Assessment",
          "description": "Test your knowledge of all programming concepts covered in the course",
          "lessonType": "FINAL_TEST",
          "duration": 90,
          "isPreview": false,
          "order": 3,
          "estimatedDuration": 95,
          "passingScore": 75,
          "questions": [
            {
              "content": "Which data structure operates on a LIFO (Last In, First Out) principle?",
              "order": 1,
              "answers": [
                {
                  "content": "Queue",
                  "isCorrect": false
                },
                {
                  "content": "Stack",
                  "isCorrect": true
                },
                {
                  "content": "Linked List",
                  "isCorrect": false
                },
                {
                  "content": "Binary Tree",
                  "isCorrect": false
                }
              ]
            },
            {
              "content": "What is the time complexity of binary search?",
              "order": 2,
              "answers": [
                {
                  "content": "O(1)",
                  "isCorrect": false
                },
                {
                  "content": "O(n)",
                  "isCorrect": false
                },
                {
                  "content": "O(log n)",
                  "isCorrect": true
                },
                {
                  "content": "O(n²)",
                  "isCorrect": false
                }
              ]
            },
            {
              "content": "Which of the following is NOT a JavaScript primitive type?",
              "order": 3,
              "answers": [
                {
                  "content": "String",
                  "isCorrect": false
                },
                {
                  "content": "Number",
                  "isCorrect": false
                },
                {
                  "content": "Array",
                  "isCorrect": true
                },
                {
                  "content": "Boolean",
                  "isCorrect": false
                }
              ]
            },
            {
              "content": "What does the Python 'self' parameter represent in a class method?",
              "order": 4,
              "answers": [
                {
                  "content": "The class itself",
                  "isCorrect": false
                },
                {
                  "content": "The instance of the class",
                  "isCorrect": true
                },
                {
                  "content": "The parent class",
                  "isCorrect": false
                },
                {
                  "content": "The module containing the class",
                  "isCorrect": false
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}

### Get all courses for an instructor full relation
# Returns all courses created by a specific instructor
# Trạng thái : Đã test
GET {{baseUrl}}/instructors/{{instructorId}}/courses/full
Authorization: Bearer {{token}}


### Get all courses for an instructor
# Returns all courses created by a specific instructor
# Trạng thái : Đã test chạy ok  
GET {{baseUrl}}/instructors/{{instructorId}}/courses
Authorization: Bearer {{token}}

### Get a specific course by ID
# Returns detailed information about a specific course including modules and lessons
# Trạng thái : Đã test chạy ok  
GET {{baseUrl}}/instructors/{{instructorId}}/courses/{{courseId}}
Authorization: Bearer {{token}}

### Update a course
# Updates an existing course's basic information
# Trạng thái : Đã test chạy ok  
PUT {{baseUrl}}/instructors/{{instructorId}}/courses/{{courseId}}
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "title": "Test 2 đã update chưa test thay đổi module",
  "description": "Learn advanced programming techniques and patterns",
  "price": 149.99,
  "thumbnail": "https://example.com/updated-thumbnail.jpg",
  "isPublished": true
}

### Delete a course
# Permanently removes a course and all its related content
# Trạng thái : Đã test chạy ok  

DELETE {{baseUrl}}/instructors/{{instructorId}}/courses/{{courseId}}
Authorization: Bearer {{token}}

### Publish a course
# Changes a course's status to published, making it available to learners
# Trạng thái : Chưa triển khai

PATCH {{baseUrl}}/instructors/{{instructorId}}/courses/{{courseId}}/publish
Authorization: Bearer {{token}}

### Unpublish a course
# Changes a course's status to unpublished, hiding it from learners
# Trạng thái : Chưa triển khai

PATCH {{baseUrl}}/instructors/{{instructorId}}/courses/{{courseId}}/unpublish
Authorization: Bearer {{token}}

### Get popular courses
# Returns a list of the most popular courses based on enrollment counts
# Trạng thái : Chưa triển khai
GET {{baseUrl}}/instructors/{{instructorId}}/courses/popular
Authorization: Bearer {{token}}

### Search courses
# Searches for courses based on provided query parameters
# Trạng thái : Chưa triển khai
GET {{baseUrl}}/instructors/{{instructorId}}/courses/search?query=python&topic=programming&minPrice=0&maxPrice=100
Authorization: Bearer {{token}}

### Upload course thumbnail
# Uploads a thumbnail image for a course
# Trạng thái : Chưa triển khai
POST {{baseUrl}}/instructors/{{instructorId}}/courses/{{courseId}}/thumbnail
Authorization: Bearer {{token}}
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="thumbnail"; filename="course-thumbnail.jpg"
Content-Type: image/jpeg

< ./course-thumbnail.jpg
------WebKitFormBoundary7MA4YWxkTrZu0gW--
